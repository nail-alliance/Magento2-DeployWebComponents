<?php
/* Name: getComponentAttributes
*  Description: Build a list of attributes to add to component tags (e.g. country="US")
*/
function getComponentAttributes(string $baseUrl, string $categoryId, string $storeId, string $componentName)
{

  $attributes = [];

  // Example condition: add attributes based on url
  switch ($baseUrl) {
    case "https://entitybeauty.co.uk/":
      $attributes['country'] = 'UK';
      break;
    case "https://entitybeauty.com/":
      $attributes['country'] = 'US';
    default:
      break;
  }

  $trimmedUrl = rtrim($baseUrl, '/');

  // Custom attributes for collection-color-swatch-sampler.txt
  switch ($componentName) {
    case "collection-color-swatch-sampler":
      $attributes['store_id'] = $storeId;
      $attributes['categories_id'] = $categoryId;
      $attribute['store_domain'] = $trimmedUrl;
    default:
      break;
  }

  // Apply domain to components by default
  $attributes['domain_name'] = $trimmedUrl;

  // Convert attributes array to string
  $attrString = '';
  foreach ($attributes as $key => $value) {
    $attrString .= $key . '="' . $value . '" ';
  }

  return trim($attrString);  // Trim the final space
}

// TODO: Temoroary URL trimmer for collection-color-swatch-sampler
function getDomainName($url)
{
  $parsedUrl = parse_url($url);
  $host = $parsedUrl['host'];
  $parts = explode('.', $host);
  if (count($parts) > 1) {
    return $parts[count($parts) - 2] . '.' . $parts[count($parts) - 1];
  }
  return $host;
}

/* Name: includeComponentScript
*  Description: Render web components from .txt files 
*  Parameters: string $filename - File's full name && bool $isAllowed - check if ecommerce needs to be filtered for a visitor
*/
function includeComponentScript(string $filename, bool $isAllowed, mixed $block, string $baseUrl)
{
  $currentStoreId = $block->getCurrentStoreId();
  $currentCategoryId = $block->getCurrentCategoryId();

  $filePath = dirname(__FILE__) . '/web-components/' . $filename;

  if (file_exists($filePath)) {
    $fileData = file_get_contents($filePath);

    // Extract the base component name by removing the .txt extension
    $componentName = basename($filename, '.txt');

    // Create the full component tag with opening and closing tags
    $attributes = getComponentAttributes($baseUrl, $currentCategoryId, $currentStoreId, $componentName);
    $componentTag = "<{$componentName} {$attributes}></{$componentName}>";

    // Curate e-commerce for a specific page
    if ($filename == "entitybeauty-homepage.txt" && !$isAllowed) {
      $ecommerceFilter = '<?php echo .buybutton{display:none!important;}.buybutton h2{display:none!important;}.shop-now-btn{display:none!important;};?>';
      $fileData = str_replace('thisisaplaceholder', $ecommerceFilter, $fileData);
    } else {
      $fileData = str_replace('thisisaplaceholder', "", $fileData);
    }

    // Curate color swatch domain
    if ($filename == "collection-color-swatch-sampler.txt") {
      try {
        $fileData = str_replace('color-swatch-domain', getDomainName($baseUrl), $fileData);
      } catch (\Exception $e) {
        // ...
      }
    }

    // Render the script and component tag
    echo "<script type='module'>$fileData</script>";
    echo $componentTag;
    return true;
  } else {
    return false;
  }
}

// Get store url
$baseUrl = $block->getCurrentBaseUrl();

// Gather the relevant .txt string and files
$txtfiles = $block->getData('txtfiles');
$componentList = explode("|", $txtfiles);

// Check for international visitors...
if($baseUrl == "https://entitybeauty.com/") {
  $isAllowed = $block->isAllowed();
} else {
  $isAllowed = true;
}

// Render each web component...
foreach ($componentList as $component) {
  includeComponentScript($component, $isAllowed, $block, $baseUrl);
}
?>

<!-- Add CSS files -->
<link rel="stylesheet" type="text/css" href="<?php echo $baseUrl ?>css/style.css">